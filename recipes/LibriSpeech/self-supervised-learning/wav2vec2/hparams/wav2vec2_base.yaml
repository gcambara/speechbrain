# ################################
# Model: wav2vec2 BASE (pretraining)
# Authors: Guillermo CÃ¡mbara 2022
#          Rudolf Braun      2022
#          Titouan Parcollet 2022
#          Sarthak Yadav     2022
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1993
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/wav2vec2_pretraining/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
use_tensorboard: True
tensorboard_logs: !ref <output_folder>/logs/

# Data files
data_folder: !PLACEHOLDER # e,g./path/to/LibriSpeech
train_splits: ["train-clean-100", "train-clean-360", "train-other-500"]
dev_splits: ["dev-clean"]
test_splits: ["test-clean", "test-other"]
skip_prep: False
ckpt_interval_minutes: 25 # save checkpoint every N min
train_csv: !ref <output_folder>/train.csv
valid_csv: !ref <output_folder>/dev-clean.csv
test_csv:
   - !ref <output_folder>/test-clean.csv
   - !ref <output_folder>/test-other.csv

avoid_if_longer_than: 60.0
avoid_if_shorter_than: 1.0

# Training parameters
# Parameters are corresponding the the ones reported in the official wav2vec2
# paper (for the masking).
mask_length: 10
mask_prob: 0.065
freeze_wav2vec: False

number_of_epochs: 100
lr_adam: 2.0 # This will get reduced by the training scheduler
warmup: 25000
weight_decay: 0.01
d_model: 768  # Needed by the scheduler. 768 is for the BASE w2v2
sorting: ascending
batch_ordering: !ref <sorting>
auto_mix_prec: False
sample_rate: 16000

batch_size: 12
batch_seconds: 50.0
test_batch_size: 8
gradient_accumulation: 16

# Dynamic batching for ease of use
dynamic_batching: False

dynamic_batch_sampler:
    max_batch_len: !ref <batch_seconds> # in terms of seconds
    left_bucket_len: 1.0
    multiplier: 1.2
    shuffle_ex: False # re-create batches at each epoch shuffling examples?
    batch_ordering: !ref <batch_ordering>

dont_mask_padding: True
num_workers: 4

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>
   num_workers: !ref <num_workers>

valid_dataloader_opts:
   batch_size: !ref <batch_size>
   num_workers: !ref <num_workers>

test_dataloader_opts:
   batch_size: !ref <test_batch_size>
   num_workers: !ref <num_workers>

#
# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

contrastive_weight: 1.0
diversity_weight: 0.1
latent_l2_weight: 10.0
wav2vec2_latent_extractor: !new:speechbrain.lobes.models.Wav2Vec2.W2V2LatentExtractor
wav2vec2_context_extractor: !new:speechbrain.lobes.models.Wav2Vec2.W2V2ContextExtractorBase
wav2vec2_positional_encoding: !new:speechbrain.lobes.models.Wav2Vec2.W2V2PositionalEncoding
wav2vec2_feature_masker: !new:speechbrain.lobes.models.Wav2Vec2.W2V2FeatureMasker
    mask_dim: 768
    mask_prob: !ref <mask_prob>
    mask_len: !ref <mask_length>
    len_sorting: !ref <batch_ordering>
wav2vec2_vector_quantizer: !new:speechbrain.lobes.models.Wav2Vec2.W2V2Quantizer
wav2vec2_loss: !new:speechbrain.lobes.models.Wav2Vec2.W2V2Loss
    contrastive_weight: !ref <contrastive_weight>
    diversity_weight: !ref <diversity_weight>
    latent_l2_weight: !ref <latent_l2_weight>

wav2vec2: !new:speechbrain.lobes.models.Wav2Vec2.Wav2Vec2
    latent_extractor:    !ref <wav2vec2_latent_extractor>
    context_extractor:   !ref <wav2vec2_context_extractor>
    positional_encoding: !ref <wav2vec2_positional_encoding>
    vector_quantizer:    !ref <wav2vec2_vector_quantizer>
    feat_masker:         !ref <wav2vec2_feature_masker>
    loss:                !ref <wav2vec2_loss>

dynamic_distractor_sampling: False
distractors_mask_percentage: 0.5
max_num_negatives: 100

num_negatives: 100
cross_sample_negatives: 0
normalize_wav: True
output_norm: False

latent_grad_weight: 0.1
penalize_latent: True

modules:
    wav2vec2: !ref <wav2vec2>

opt_class: !name:torch.optim.AdamW
    lr: 0 # Will be changed by the scheduler, but we start at 0!
    betas: (0.9, 0.98)
    eps: 0.000000001
    weight_decay: !ref <weight_decay>

noam_annealing: !new:speechbrain.nnet.schedulers.NoamScheduler
    lr_initial: !ref <lr_adam>
    n_warmup_steps: !ref <warmup>
    model_size: !ref <d_model>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        wav2vec2: !ref <wav2vec2>
        scheduler: !ref <noam_annealing>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
